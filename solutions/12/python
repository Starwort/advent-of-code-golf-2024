import itertools as it

grid = [line.strip() for line in open(0)]
height, width = len(grid), len(grid[0])
pts = set(it.product(range(width), range(height)))

regs = []
done = set()
for x,y in pts:
 if (x,y) in done: continue
 cl, op = set(), {(x,y)}
 while op:
  cl,op = cl|op, {
   (X,Y)
   for (x,y) in op
   for (X,Y) in {(x+1,y), (x-1,y), (x,y+1), (x,y-1)}
   if (X,Y) in pts
   if grid[Y][X] == grid[y][x]
  } - (cl|op)
 done |= cl
 regs.append(cl)

p1 = p2 = 0
for reg in regs:
 area = len(reg)
 for _ in range(4):
  # squares that have an edge to the right
  edges = sorted( (x,y) for x,y in reg if (x+1,y) not in reg  )
  # how many of those are not vertically adjacent when sorted?
  sides = 1 + sum(
   not ( x1 == x2 and y1 + 1 == y2 )
   for (x1,y1),(x2,y2) in zip(edges,edges[1:])
  )
  # rotate 90 degs
  reg = {(-y,x) for x,y in reg}
  p1 += area * len(edges)
  p2 += area * sides

print(p1, p2)