from operator import xor as XOR, or_ as OR, and_ as AND
t=open(0)
C={}
for l in t:
 try:a,x,b,_,c=l.split();C[c]=a,x,b;exec(f'{c}=lambda:{x}({a}(),{b}())')
 except: exec(l.replace(':', '=lambda:'))
def F(a,X,b=0):
 if b:
  for c in C:
   if C[c]in((a,X,b),(b,X,a)):return c
 else:
  for c in C:
   if X==C[c][1]:
    if a==C[c][0]:return c,C[c][2]
    elif a==C[c][2]:return c,C[c][0]
def S(a,b):C[a],C[b]=C[b],C[a];W.update({a, b})
W=set()
a=F(f"x00","AND",f"y00")
for i in range(1, 45):
 z=f"z{i:02}";D=F(x:=f"x{i:02}","XOR",y:=f"y{i:02}");Z,d=F(a,"XOR")
 if z!=Z:S(z,Z)
 if d!=D:S(d,D)
 a=F(F(x,"AND",y),"OR",F(d,"AND",a))
print(sum(eval(f"z{i:02}()<<{i}") for i in range(46)),','.join(sorted(W)))